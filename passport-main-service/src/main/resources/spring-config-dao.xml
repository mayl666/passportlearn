<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 配置master数据库 -->
    <bean id="masterDataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="jdbcUrl">
            <value>${passport.jdbc.master.url}</value>
        </property>
        <property name="user">
            <value>${passport.jdbc.username}</value>
        </property>
        <property name="password">
            <value>${passport.jdbc.password}</value>
        </property>
        <property name="driverClass">
            <value>${passport.jdbc.driver}</value>
        </property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts">
            <value>5</value>
        </property>
        <!--每30秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod">
            <value>60000</value>
        </property>
        <!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出
        SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
        <property name="checkoutTimeout">
            <value>3000</value>
        </property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize">
            <value>200</value>
        </property>
        <!--连接池中保留的最小连接数。-->
        <property name="minPoolSize">
            <value>30</value>
        </property>
        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
        属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
        如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <property name="maxStatements">
            <value>6000</value>
        </property>
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize">
            <value>50</value>
        </property>
        <!--最大空闲时间,300秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime">
            <value>300</value>
        </property>
        <!--c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能
        通过多线程实现多个操作同时被执行。Default: 3-->
        <property name="numHelperThreads">
            <value>10</value>
        </property>
    </bean>

    <!-- 配置slave数据库 -->
    <bean id="slaveDataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="jdbcUrl">
            <value>${passport.jdbc.slave.url}</value>
        </property>
        <property name="user">
            <value>${passport.jdbc.username}</value>
        </property>
        <property name="password">
            <value>${passport.jdbc.password}</value>
        </property>
        <property name="driverClass">
            <value>${passport.jdbc.driver}</value>
        </property>
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>5</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>60000</value>
        </property>
        <property name="checkoutTimeout">
            <value>3000</value>
        </property>
        <property name="maxPoolSize">
            <value>200</value>
        </property>
        <property name="minPoolSize">
            <value>30</value>
        </property>
        <property name="maxStatements">
            <value>6000</value>
        </property>
        <property name="initialPoolSize">
            <value>50</value>
        </property>
        <property name="maxIdleTime">
            <value>300</value>
        </property>
        <property name="numHelperThreads">
            <value>10</value>
        </property>
    </bean>


    <!-- 读写分离设置 -->
    <bean id="jade.dataSourceFactory" class="net.paoding.rose.jade.dataaccess.datasource.MasterSlaveDataSourceFactory">
        <constructor-arg type="javax.sql.DataSource" ref="masterDataSource"/>
        <constructor-arg type="java.util.List">
            <list>
                <ref bean="slaveDataSource"/>
            </list>
        </constructor-arg>
        <constructor-arg type="boolean" value="false"/>
    </bean>

    <!-- 分表设置 -->
    <bean id="jade.routerInterpreter" class="com.xiaomi.common.service.dal.routing.RewriteSQLInterpreter">
        <property name="routingConfigurator" ref="jade.routingConfigurator"/>
    </bean>
    <bean id="jade.routingConfigurator" class="com.sogou.upd.passport.dao.dal.routing.SGRoutingConfigurator">
        <property name="partitions">
            <list>
                <value>sg-str-hash:account:passport_id:account_{0}:32</value>
                <value>sg-str-hash:connect_token:passport_id:connect_token_{0}:32</value>
                <value>sg-str-hash:connect_relation:passport_id:connect_relation_{0}:32</value>
            </list>
        </property>
    </bean>

    <bean class="net.paoding.rose.jade.context.spring.JadeBeanFactoryPostProcessor"/>

</beans>