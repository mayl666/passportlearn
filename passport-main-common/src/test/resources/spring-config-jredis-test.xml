<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- cache redis util definition -->
    <bean id="cachePoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="200"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="50"/>
        <property name="maxWait" value="1000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <bean id="cacheConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true">
        <!--<property name="hostName" value="${passport.redis.url}"/>-->
        <!--<property name="port" value="${passport.redis.port}"/>-->
        <!--<property name="password" value="${redis.pass}"/>-->
        <!--<property name="timeout" value="${redis.timeout}"/>-->
        <!--<property name="database" value="${redis.default.db}"></property>-->
        <constructor-arg index="0" ref="cachePoolConfig"/>
    </bean>
    <bean id="cacheTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="cacheConnectionFactory"/>
    <bean id="redisUtils" class="com.sogou.upd.passport.common.utils.RedisUtils">
        <property name="redisTemplate" ref="cacheTemplate"/>
    </bean>

    <!-- kv redis util definition -->
    <bean id="kvPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="200"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="50"/>
        <property name="maxWait" value="1000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <bean id="kvConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true">
        <property name="hostName" value="10.12.139.204"/>
        <property name="port" value="6379"/>
        <!--<property name="password" value="${redis.pass}"/>-->
        <!--<property name="timeout" value="${redis.timeout}"/>-->
        <!--<property name="database" value="${redis.default.db}"></property>-->
        <constructor-arg index="0" ref="kvPoolConfig"/>
    </bean>
    <bean id="kvTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="kvConnectionFactory"/>
    <bean id="kvUtils" class="com.sogou.upd.passport.common.utils.KvUtils">
        <property name="kvTemplate" ref="kvTemplate"/>
    </bean>

    <!-- token redis utils-->
    <bean id="tokenPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="200"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="50"/>
        <property name="maxWait" value="1000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <bean id="tokenConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true">
        <!--<property name="hostName" value="${passport.tokenRedis.url}"/>-->
        <!--<property name="port" value="${passport.tokenRedis.port}"/>-->
        <!--<property name="password" value="${redis.pass}"/>-->
        <!--<property name="timeout" value="${redis.timeout}"/>-->
        <!--<property name="database" value="${redis.default.db}"></property>-->
        <constructor-arg index="0" ref="tokenPoolConfig"/>
    </bean>
    <bean id="tokenTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="tokenConnectionFactory"/>
    <bean id="tokenRedisUtils" class="com.sogou.upd.passport.common.utils.TokenRedisUtils">
        <property name="redisTemplate" ref="tokenTemplate"/>
    </bean>

    <!--热切换redis-->
    <bean id="monitor" class="com.sogou.upd.passport.zk.Monitor" destroy-method="destory">
        <constructor-arg name="zks" value="${zks}"/>
    </bean>
    <bean id="redisMonitor" class="com.sogou.upd.passport.zk.RedisMonitor" destroy-method="destroy">
        <constructor-arg name="monitor" ref="monitor"/>
        <constructor-arg name="cachePath" value="${cacheRedisZkPath}"/>
        <constructor-arg name="tokenPath" value="${tokenRedisZkPath}"/>
        <constructor-arg name="tokenConnectionFactory" ref="tokenConnectionFactory"/>
        <constructor-arg name="cacheConnectionFactory" ref="cacheConnectionFactory"/>
    </bean>



</beans>