<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    ">

    <!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->
    <!-- 自定义AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true">
        <aop:include name="controllerAspect"/>
    </aop:aspectj-autoproxy>

    <!-- 自动发现bean，包括@Component@Service@Controller等 -->
    <context:component-scan base-package="com.sogou.upd.passport.**"/>

    <!-- import the dataSource definition -->
    <import resource="classpath:spring-config-dao.xml"/>
    <import resource="classpath:spring-config-service.xml"/>
    <import resource="classpath:spring-config-jredis.xml"/>
    <import resource="spring-config-mail.xml"/>

    <!--<import resource="spring-config-mail.xml"/>-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:deploy_config_DEV.properties</value>
            </list>
        </property>
    </bean>

    <!-- 导入dubbo配置文件 -->
    <!--<import resource="classpath:dubbo/spring-dubbo-*.xml"/>-->
    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- spring mvc setting -->

    <!-- Inteceptor 记录API请求url和执行时间 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.sogou.upd.passport.web.internal.inteceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:default-servlet-handler/>



    <!-- 特定对象mapper，用于注入对特定字符进行转义的类 -->
    <!-- <bean id="CustomObjectMapper" class="com.sogou.upd.passport.common.web.CustomObjectMapper"/> -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="order" value="1"/>
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter"/>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>



    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    </bean>

    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- 将其放在RequestMappingHandlerAdapter之后用于解决@ResponseBody乱码问题 -->
    <mvc:annotation-driven/>


</beans>