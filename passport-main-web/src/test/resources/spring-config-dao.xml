<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 配置master数据库 -->
    <bean id="masterDataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl">
            <value>jdbc:mysql://10.11.211.18:3306/sogou_passport?characterEncoding=utf-8</value>
        </property>
        <property name="user">
            <value>sogou_passport</value>
        </property>
        <property name="password">
            <value>sogou_passport</value>
        </property>
        <property name="driverClass">
            <value>c3p0</value>
        </property>
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>3000</value>
        </property>
        <property name="checkoutTimeout">
            <value>30000</value>
        </property>
        <property name="maxPoolSize">
            <value>80</value>
        </property>
        <property name="minPoolSize">
            <value>10</value>
        </property>
        <property name="maxStatements">
            <value>6000</value>
        </property>
        <property name="initialPoolSize">
            <value>5</value>
        </property>
    </bean>

    <!-- 配置slave数据库 -->
    <bean id="slaveDataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="jdbcUrl">
            <value>jdbc:mysql://10.11.211.18:3306/sogou_passport?characterEncoding=utf-8</value>
        </property>
        <property name="user">
            <value>sogou_passport</value>
        </property>
        <property name="password">
            <value>sogou_passport</value>
        </property>
        <property name="driverClass">
            <value>c3p0</value>
        </property>
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>3000</value>
        </property>
        <property name="checkoutTimeout">
            <value>30000</value>
        </property>
        <property name="maxPoolSize">
            <value>80</value>
        </property>
        <property name="minPoolSize">
            <value>10</value>
        </property>
        <property name="maxStatements">
            <value>6000</value>
        </property>
        <property name="initialPoolSize">
            <value>5</value>
        </property>
    </bean>


    <bean id="jade.dataSourceFactory" class="net.paoding.rose.jade.dataaccess.datasource.MasterSlaveDataSourceFactory">
        <constructor-arg type="javax.sql.DataSource" ref="masterDataSource"/>
        <constructor-arg type="java.util.List">
            <list>
                <ref bean="slaveDataSource"/>
            </list>
        </constructor-arg>
        <constructor-arg type="boolean" value="false"/>
    </bean>

    <!-- 分表设置 -->
    <bean id="jade.routerInterpreter" class="com.xiaomi.common.service.dal.routing.RewriteSQLInterpreter">
        <property name="routingConfigurator" ref="jade.routingConfigurator" />
    </bean>
    <bean id="jade.routingConfigurator" class="com.sogou.upd.passport.dao.dal.routing.SGRoutingConfigurator">
        <property name="partitions">
            <list>
                <value>sg-str-hash:account:passport_id:account_{0}:3</value>
                <value>sg-str-hash:connect_token:passport_id:connect_token_{0}:3</value>
                <value>sg-str-hash:connect_relation:passport_id:connect_relation_{0}:3</value>
            </list>
        </property>
    </bean>

    <bean class="net.paoding.rose.jade.context.spring.JadeBeanFactoryPostProcessor"/>

</beans>
